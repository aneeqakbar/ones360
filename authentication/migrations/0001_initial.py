# Generated by Django 4.0.3 on 2022-03-28 09:59

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('image', models.ImageField(default='profile_pics/default.jpg', null=True, upload_to='country_flags/')),
                ('country_code', models.CharField(max_length=50, null=True, verbose_name='country_code')),
                ('currency_code', models.CharField(max_length=50, null=True, verbose_name='currency_code')),
                ('phone_code', models.CharField(max_length=50, null=True, verbose_name='phone_code')),
                ('phone_format', models.CharField(max_length=50, null=True, verbose_name='phone_format')),
                ('date_of_creation', models.DateTimeField(null=True, verbose_name='date_of_creation')),
                ('status', models.BooleanField(default=True, null=True, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'Shop_Employee'), (2, 'Customer'), (3, 'Shop_Owner'), (5, 'Staff_1S360'), (4, 'Super_Admin')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('date_of_creation', models.DateTimeField(null=True, verbose_name='date_of_creation')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='authentication.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('date_of_creation', models.DateTimeField(null=True, verbose_name='date_of_creation')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='authentication.country', verbose_name='country')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='authentication.province', verbose_name='province')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=255, null=True, verbose_name='full_name')),
                ('username', models.CharField(blank=True, help_text='150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, verbose_name='username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Enter your email address here.', max_length=255, unique=True, verbose_name='email')),
                ('mobile_number', models.CharField(error_messages={'unique': 'A user with that mobile number already exists.'}, help_text='Enter your mobile number here.', max_length=255, unique=True, verbose_name='mobile_number')),
                ('whatsapp_number', models.CharField(blank=True, max_length=255, verbose_name='whatsapp_number')),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='date_of_birth')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('O', 'Other')], max_length=50, verbose_name='gender')),
                ('profile_image', models.ImageField(default='profile_pics/default.jpg', null=True, upload_to='profile_pics/')),
                ('about', models.TextField(blank=True)),
                ('detail_address', models.TextField(blank=True, verbose_name='detail_address')),
                ('google_address', models.TextField(blank=True, verbose_name='google_address')),
                ('longitude', models.IntegerField(default=0, verbose_name='longitude')),
                ('latitude', models.IntegerField(default=0, verbose_name='latitude')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.city', verbose_name='city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.country', verbose_name='country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='authentication.role', verbose_name='role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
